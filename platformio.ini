[ota]
esp_auth = 00000000 ; password must be at least 8 characters
esp_name = render-test

[platformio]
; provide setup/loop functions for test compile:
src_dir = examples/minimal
data_dir = examples/minimal/data

[env]
platform = espressif32
framework = arduino
upload_speed = 921600
monitor_speed = 115200
lib_extra_dirs = ${workspacedir} ; this library, for test compile
build_flags =
	-DESP_NAME=\"${ota.esp_name}\"
	-DESP_AUTH=\"${ota.esp_auth}\"
lib_deps =
  https://github.com/stevesch/stevesch-MathBase.git
  https://github.com/stevesch/stevesch-MathVec.git

[env:esp32-dev-module]
board = esp32dev

[env:esp32-dev-module-OTA]
extends = env:esp32-dev-module
upload_speed = 1500000
upload_flags = --auth=${ota.esp_auth}
upload_port = ${ota.esp_name}.local
upload_protocol = espota


[env:esp32-pico-module]
board = pico32
upload_speed = 115200

[env:esp32-pico-module-OTA]
extends = env:esp32-pico-module
upload_speed = 1500000
upload_flags = --auth=${ota.esp_auth}
upload_port = ${ota.esp_name}.local
upload_protocol = espota


[env:esp32-wrover-module]
board = esp-wrover-kit
build_flags = 
	-DBOARD_HAS_PSRAM
	-DCONFIG_SPIRAM_SUPPORT
	-mfix-esp32-psram-cache-issue

[env:esp32-wrover-module-OTA]
extends = env:esp32-wrover-module
upload_speed = 1500000
upload_flags = --auth=${ota.esp_auth}
upload_port = ${ota.esp_name}.local
upload_protocol = espota
